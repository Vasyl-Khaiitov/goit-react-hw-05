import axios from 'axios';

const API_BASE_URL = 'https://api.themoviedb.org/3';
const myACCESS_TOKEN = import.meta.env.VITE_ACCESS_TOKEN;

const apiClient = axios.create({
  baseURL: API_BASE_URL,
  headers: {
    Authorization: `Bearer ${myACCESS_TOKEN}`, // –û–±–æ–≤‚Äô—è–∑–∫–æ–≤–∏–π –ø—Ä–µ—Ñ—ñ–∫—Å Bearer –¥–ª—è –¥–æ—Å—Ç—É–ø—É
  },
});

// üî• 1. –û—Ç—Ä–∏–º–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–Ω–¥–æ–≤–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤
export async function fetchTrendingMovies(page) {
  try {
    const response = await apiClient.get('/trending/movie/day', {
      params: { page },
    });
    console.log(response.data);

    return response.data; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ª–∏—à–µ –º–∞—Å–∏–≤ —Ñ—ñ–ª—å–º—ñ–≤
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —Ç—Ä–µ–Ω–¥–æ–≤–∏—Ö —Ñ—ñ–ª—å–º—ñ–≤:', error);
    throw error;
  }
}

// üîé 2. –ü–æ—à—É–∫ —Ñ—ñ–ª—å–º—ñ–≤ –∑–∞ –∫–ª—é—á–æ–≤–∏–º —Å–ª–æ–≤–æ–º
export async function searchMovies(query) {
  try {
    const response = await apiClient.get('/search/movie', {
      params: { query },
    });
    return response.data.results; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å–ø–∏—Å–æ–∫ —Ñ—ñ–ª—å–º—ñ–≤
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É —Ñ—ñ–ª—å–º—ñ–≤:', error);
    throw error;
  }
}

// üé¨ 3. –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ —Ñ—ñ–ª—å–º—É –∑ –ø—ñ–¥–∑–∞–ø–∏—Ç–∞–º–∏
export async function fetchMovieDetails(movieId) {
  try {
    const response = await apiClient.get(`/movie/${movieId}`, {
      params: { append_to_response: 'videos,reviews,credits' }, // –î–æ–¥–∞—î–º–æ –≤—ñ–¥–µ–æ —Ç–∞ –≤—ñ–¥–≥—É–∫–∏
    });
    return response.data; // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ–≤–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ñ—ñ–ª—å–º
  } catch (error) {
    console.error(`–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–µ—Ç–∞–ª–µ–π —Ñ—ñ–ª—å–º—É ID ${movieId}:`, error);
    throw error;
  }
}
